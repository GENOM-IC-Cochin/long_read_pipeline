# Welcome to the config file of GENOM'IC's long read splicing analysis pipeline.

# This config file needs raw data (fastq), references (gtf, fasta), and a samplesheet.
# Optionaly, this pipeline can align on a pathogen/host reference and filter out the pathogen-aligning reads.


# ------------------------------------------------------------------------------
# References
# Either a gtf for both pathogen and host, or the gtf for the organism filtered in
gtf: "/home/etheimer/ref_proj_paul/gencode/gencode.v43.primary_assembly.annotation.gtf"
# Is created by a rule : just give it a path and a name - the gtf is modified for the alignment qc metrics
collaps_gtf: "/home/etheimer/ref_proj_paul/gencode/gencode.v43.primary_assembly.annotation_collapsed.gtf"
# The reference for both host and pathogen concatenated
ref_fa: "/home/etheimer/ref_proj_paul/custom_ref/GRCh38.primary_assembly_pNLGV.fa.gz"

# ------------------------------------------------------------------------------
# Samplesheet
# The samplesheet needs to contain :
# - a column named condition for the principal effect to be studied
# - a column named sampleID containing the names of the samples; they need to match the name of the fastq files
samplesheet: "design_matrix.tsv"
# optionally the samplesheet can have other columns indicating batch effects, such as sequencing run
# donor, or sex. The additional variables need to be mentioned here, separated by commas,
# and match exactly the columns of the samplesheet.
# Attention, aucune colonne batch (ou la variable principale) ne doit être une combinaison linéaire des autres
# Exemple incorrect (doc de DESeq2) :
## DataFrame with 6 rows and 2 columns
##      batch condition
##   <factor>  <factor>
## 1        1         A
## 2        1         A
## 3        1         B
## 4        1         B
## 5        2         C
## 6        2         C
batch: ""

# ------------------------------------------------------------------------------
# Comparison order
# A file indicating comparisons (and variable) to use
# format : variable,level_1,level_2
comparison: "/home/etheimer/ONT_Gallois/tat_pas_tat_v2/contrasts.csv"

# ------------------------------------------------------------------------------
# fastq directory
# The directory containing all and only the fastqs. Without . in their names
fastq_dir: "/datas/PROJETS/2023/Nanopore_Paul/tat_pas_tat/"

# ------------------------------------------------------------------------------
# Output directories
# the output directory for the quantification files
quant_dir: "quants_human/"
# the output directory for the - final - bam files
bam_dir: "bams/"

# ------------------------------------------------------------------------------
# Organism
# If used in a host/pathogen context, provide names for your organisms.
# The second name is the one filtered out
# (but this parameter only gives names, it is the bed file that defines what is filtered)
organisms: "human,pNLGV"

# ------------------------------------------------------------------------------
# Filter bam
# whether to filter out parts of the reference genome (such as the pathogen genome)
filter: "yes"
# a bed file indicating the regions to filter out
# example : to filter out the pNLGV HIV genome from the bams (just this single line if in a single chromosome):
# pNLGV_4GS_Tm	0	15489
bed_file: "viral_chr.bed"

# ------------------------------------------------------------------------------
# Alignment with prioritization on annotated splice junctions. (--junc_bed option of minimap2)
junc: "no"

# ------------------------------------------------------------------------------
# Use Isoquant's discovered transcripts
tr_discovery: "no"

# ------------------------------------------------------------------------------
# Filter low expression transcript
# Using the DRIMseq filters
# Benchmark default, adapted to short read :
# min_feature_expr = 10, min_feature_prop = 0.1, min_gene_expr = 10
# with n_big being the total number of sample

# Sample size of the smallest group
n_small: "3"
# Minimum isoform expression in n_small samples
min_feature_expr: "3"
# Minimum relative proportion in n_small samples
# "For a concrete example, if a transcript goes from a proportion of 0% in the control group to a proportion of 9% in the treatment group, this would be removed by the above 10% filter"
# same idea for the min_feature_expr
min_feature_prop: "0.1"
# number of samples for the below filter, by default the total number of sample
n_big: "6"
# Minimum gene expression in n_big samples
min_gene_expr: "3"
